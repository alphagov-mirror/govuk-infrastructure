---
definitions:

resource_types:
  - name: slack-notification
    type: docker-image
    source:
      repository: cfcommunity/slack-notification-resource
      tag: latest
      username: ((docker_hub_username))
      password: ((docker_hub_authtoken))

resources:
  - &git-repo
    icon: github
    name: govuk-infrastructure
    source:
      branch: bilbof/fixup-content-store-deployments
      uri: https://github.com/alphagov/govuk-infrastructure
    type: git

  - <<: *git-repo
    name: frontend
    source:
      branch: master
      uri: https://github.com/alphagov/frontend
      tag_filter: release_*

  - <<: *git-repo
    name: publisher
    source:
      branch: master
      uri: https://github.com/alphagov/publisher
      tag_filter: release_*

  - <<: *git-repo
    name: publishing-api
    source:
      branch: master
      uri: https://github.com/alphagov/publishing-api
      tag_filter: release_*

  - <<: *git-repo
    name: content-store
    source:
      branch: master
      uri: https://github.com/alphagov/content-store
      tag_filter: release_*

  - <<: *git-repo
    name: router
    source:
      branch: master
      uri: https://github.com/alphagov/router
      tag_filter: release_*

  - <<: *git-repo
    name: router-api
    source:
      branch: master
      uri: https://github.com/alphagov/router-api
      tag_filter: release_*

  - <<: *git-repo
    name: signon
    source:
      branch: master
      uri: https://github.com/alphagov/signon
      tag_filter: release_*

  - <<: *git-repo
    name: static
    source:
      branch: master
      uri: https://github.com/alphagov/static
      tag_filter: release_*

  - name: deploy-slack-channel
    type: slack-notification
    source:
      url: https://hooks.slack.com/services/((slack_webhook))

groups:
  - name: all
    jobs:
      - update-pipeline
      - run-terraform
      - deploy-content-store
      - deploy-draft-content-store
      - deploy-frontend
      - smoke-test-frontend
      - deploy-draft-frontend
      - deploy-publisher
      - deploy-publishing-api
      - deploy-router
      - deploy-draft-router
      - deploy-router-api
      - deploy-draft-router-api
      - deploy-signon
      - deploy-static
      - deploy-draft-static

  - name: terraform
    jobs:
      - run-terraform

  - name: admin
    jobs:
      - update-pipeline

  - name: content-store
    jobs:
      - deploy-content-store
      - deploy-draft-content-store

  - name: frontend
    jobs:
      - deploy-frontend
      - deploy-draft-frontend
      - smoke-test-frontend

  - name: publisher
    jobs:
      - deploy-publisher

  - name: publishing-api
    jobs:
      - deploy-publishing-api

  - name: router
    jobs:
      - deploy-router
      - deploy-draft-router

  - name: router-api
    jobs:
      - deploy-router-api
      - deploy-draft-router-api

  - name: signon
    jobs:
      - deploy-signon

  - name: static
    jobs:
      - deploy-static
      - deploy-draft-static

jobs:
  - name: update-pipeline
    plan:
    - get: govuk-infrastructure
      trigger: true
    - file: govuk-infrastructure/concourse/pipelines/deploy.yml
      set_pipeline: deploy-apps-test

  - name: run-terraform
    plan:
    - get: govuk-infrastructure
      trigger: true
    - task: terraform-apply
      config:
        inputs:
        - name: govuk-infrastructure
        params:
          AWS_REGION: eu-west-1
          ASSUME_ROLE_ARN: 'arn:aws:iam::430354129336:role/govuk-concourse-deployer'
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: governmentpaas/terraform
            tag: terraform-0.13.3
            username: ((docker_hub_username))
            password: ((docker_hub_authtoken))
        run:
          dir: govuk-infrastructure/terraform/deployments/govuk-test
          path: sh
          args:
          - '-c'
          - |
            set -eu

            terraform init -backend-config "role_arn=$ASSUME_ROLE_ARN"
            terraform apply \
              -var "assume_role_arn=$ASSUME_ROLE_ARN" \
              -var-file ../variables/test/common.tfvars \
              -var-file ../variables/test/infrastructure.tfvars \
              -auto-approve

  - name: deploy-frontend
    plan:
    - get: govuk-infrastructure
      passed:
      - run-terraform
      trigger: true
    - get: release
      resource: frontend
      trigger: true
    - task: update-task-definition
      file: govuk-infrastructure/concourse/tasks/update-task-definition.yml
      params:
        APPLICATION: frontend
        GOVUK_ENVIRONMENT: test
    - task: update-ecs-service
      file: govuk-infrastructure/concourse/tasks/update-ecs-service.yml
      params:
        ECS_SERVICE: frontend
        GOVUK_ENVIRONMENT: test
    serial: true
    on_failure: &notify-slack-failure
      put: deploy-slack-channel
      params:
        channel: "#govuk-deploy-alerts"
        username: 'Concourse deploy pipeline'
        icon_emoji: ':concourse:'
        silent: true
        text: |
          :red_circle: Failed build: http://cd.gds-reliability.engineering/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME

  - name: smoke-test-frontend
    plan:
    - get: govuk-infrastructure
      passed:
      - deploy-frontend
      trigger: true
    - file: govuk-infrastructure/concourse/tasks/basic-smoke-test.yml
      params:
        MESSAGE: Checking the app is not serving HTTP error codes.
        URL: https://www.gov.uk/
      task: smoke-test

  - name: deploy-draft-frontend
    plan:
    - get: govuk-infrastructure
      passed:
      - run-terraform
      trigger: true
    - get: release
      resource: frontend
      trigger: true
    - task: update-task-definition
      file: govuk-infrastructure/concourse/tasks/update-task-definition.yml
      params:
        APPLICATION: draft-frontend
        GOVUK_ENVIRONMENT: test
    - task: update-ecs-service
      file: govuk-infrastructure/concourse/tasks/update-ecs-service.yml
      params:
        ECS_SERVICE: draft-frontend
        GOVUK_ENVIRONMENT: test
    serial: true
    on_failure: &notify-slack-failure
      put: deploy-slack-channel
      params:
        channel: "#govuk-deploy-alerts"
        username: 'Concourse deploy pipeline'
        icon_emoji: ':concourse:'
        silent: true
        text: |
          :red_circle: Failed build: http://cd.gds-reliability.engineering/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME


  - name: deploy-publisher
    plan:
    - get: govuk-infrastructure
      passed:
      - run-terraform
      trigger: true
    - get: release
      resource: publisher
      trigger: true
    - task: update-web-task-definition
      file: govuk-infrastructure/concourse/tasks/update-task-definition.yml
      params:
        APPLICATION: publisher-web
        GOVUK_ENVIRONMENT: test
        TASK_DEFINITION: web_task_definition
    - task: update-worker-task-definition
      file: govuk-infrastructure/concourse/tasks/update-task-definition.yml
      params:
        APPLICATION: publisher-worker
        GOVUK_ENVIRONMENT: test
        TASK_DEFINITION: worker_task_definition
    - task: fetch-db-migrations-config
      file: govuk-infrastructure/concourse/tasks/fetch-task-network-config.yml
      params:
        APPLICATION: publisher-web
        GOVUK_ENVIRONMENT: test
        TASK_DEFINITION: web_task_definition
    - task: run-db-migrations
      file: govuk-infrastructure/concourse/tasks/run-task.yml
      params:
        APPLICATION: publisher-web
        COMMAND: "rails db:migrate"
        TASK_DEFINITION: web_task_definition
    - task: update-web-ecs-service
      file: govuk-infrastructure/concourse/tasks/update-ecs-service.yml
      params:
        ECS_SERVICE: publisher-web
        GOVUK_ENVIRONMENT: test
        TASK_DEFINITION: web_task_definition
    - task: update-worker-ecs-service
      file: govuk-infrastructure/concourse/tasks/update-ecs-service.yml
      params:
        ECS_SERVICE: publisher-worker
        GOVUK_ENVIRONMENT: test
        TASK_DEFINITION: worker_task_definition
    serial: true
    on_failure:
      <<: *notify-slack-failure

  - name: deploy-publishing-api
    plan:
    - get: govuk-infrastructure
      passed:
      - run-terraform
      trigger: true
    - get: release
      resource: publishing-api
      trigger: true
    - task: update-web-task-definition
      file: govuk-infrastructure/concourse/tasks/update-task-definition.yml
      params:
        APPLICATION: publishing-api-web
        GOVUK_ENVIRONMENT: test
        TASK_DEFINITION: web_task_definition
    - task: update-worker-task-definition
      file: govuk-infrastructure/concourse/tasks/update-task-definition.yml
      params:
        APPLICATION: publishing-api-worker
        GOVUK_ENVIRONMENT: test
        TASK_DEFINITION: worker_task_definition
    - task: update-web-ecs-service
      file: govuk-infrastructure/concourse/tasks/update-ecs-service.yml
      params:
        ECS_SERVICE: publishing-api-web
        GOVUK_ENVIRONMENT: test
        TASK_DEFINITION: web_task_definition
    - task: update-worker-ecs-service
      file: govuk-infrastructure/concourse/tasks/update-ecs-service.yml
      params:
        ECS_SERVICE: publishing-api-worker
        GOVUK_ENVIRONMENT: test
        TASK_DEFINITION: worker_task_definition
    serial: true
    on_failure:
      <<: *notify-slack-failure

  - name: deploy-content-store
    plan:
    - get: govuk-infrastructure
      passed:
      - run-terraform
      trigger: true
    - get: release
      resource: content-store
      trigger: true
    - task: update-task-definition
      file: govuk-infrastructure/concourse/tasks/update-task-definition.yml
      params:
        APPLICATION: content-store
        GOVUK_ENVIRONMENT: test
        TASK_DEFINITION: live_task_definition
    - task: update-ecs-service
      file: govuk-infrastructure/concourse/tasks/update-ecs-service.yml
      params:
        ECS_SERVICE: content-store
        GOVUK_ENVIRONMENT: test
        TASK_DEFINITION: live_task_definition
    serial: true
    on_failure:
      <<: *notify-slack-failure

  - name: deploy-draft-content-store
    plan:
    - get: govuk-infrastructure
      passed:
      - run-terraform
      trigger: true
    - get: release
      resource: content-store
      trigger: true
    - task: update-task-definition
      file: govuk-infrastructure/concourse/tasks/update-task-definition.yml
      params:
        APPLICATION: content-store
        GOVUK_ENVIRONMENT: test
        TASK_DEFINITION: draft_task_definition
    - task: update-ecs-service
      file: govuk-infrastructure/concourse/tasks/update-ecs-service.yml
      params:
        ECS_SERVICE: draft-content-store
        GOVUK_ENVIRONMENT: test
        TASK_DEFINITION: draft_task_definition
    serial: true
    on_failure:
      <<: *notify-slack-failure

  - name: deploy-router
    plan:
    - get: govuk-infrastructure
      passed:
      - run-terraform
      trigger: true
    - get: release
      resource: router
      trigger: true
    - task: update-task-definition
      file: govuk-infrastructure/concourse/tasks/update-task-definition.yml
      params:
        APPLICATION: router
        GOVUK_ENVIRONMENT: test
    - task: update-ecs-service
      file: govuk-infrastructure/concourse/tasks/update-ecs-service.yml
      params:
        ECS_SERVICE: router
        GOVUK_ENVIRONMENT: test
    serial: true
    on_failure:
      <<: *notify-slack-failure

  - name: deploy-draft-router
    plan:
    - get: govuk-infrastructure
      passed:
      - run-terraform
      trigger: true
    - get: release
      resource: router
      trigger: true
    - task: update-task-definition
      file: govuk-infrastructure/concourse/tasks/update-task-definition.yml
      params:
        APPLICATION: draft-router
        GOVUK_ENVIRONMENT: test
    - task: update-ecs-service
      file: govuk-infrastructure/concourse/tasks/update-ecs-service.yml
      params:
        ECS_SERVICE: draft-router
        GOVUK_ENVIRONMENT: test
    serial: true
    on_failure:
      <<: *notify-slack-failure

  - name: deploy-router-api
    plan:
    - get: govuk-infrastructure
      passed:
      - run-terraform
      trigger: true
    - get: release
      resource: router-api
      trigger: true
    - task: update-task-definition
      file: govuk-infrastructure/concourse/tasks/update-task-definition.yml
      params:
        APPLICATION: router-api
        GOVUK_ENVIRONMENT: test
    - task: update-ecs-service
      file: govuk-infrastructure/concourse/tasks/update-ecs-service.yml
      params:
        ECS_SERVICE: router-api
        GOVUK_ENVIRONMENT: test
    serial: true
    on_failure:
      <<: *notify-slack-failure

  - name: deploy-draft-router-api
    plan:
    - get: govuk-infrastructure
      passed:
      - run-terraform
      trigger: true
    - get: release
      resource: router-api
      trigger: true
    - task: update-task-definition
      file: govuk-infrastructure/concourse/tasks/update-task-definition.yml
      params:
        APPLICATION: draft-router-api
        GOVUK_ENVIRONMENT: test
    - task: update-ecs-service
      file: govuk-infrastructure/concourse/tasks/update-ecs-service.yml
      params:
        ECS_SERVICE: draft-router-api
        GOVUK_ENVIRONMENT: test
    serial: true
    on_failure:
      <<: *notify-slack-failure

  - name: deploy-signon
    plan:
    - get: govuk-infrastructure
      passed:
      - run-terraform
      trigger: true
    - get: release
      resource: signon
      trigger: true
    - task: update-task-definition
      file: govuk-infrastructure/concourse/tasks/update-task-definition.yml
      params:
        APPLICATION: signon
        GOVUK_ENVIRONMENT: test
    - task: update-ecs-service
      file: govuk-infrastructure/concourse/tasks/update-ecs-service.yml
      params:
        ECS_SERVICE: signon
        GOVUK_ENVIRONMENT: test
    serial: true
    on_failure:
      <<: *notify-slack-failure

  - name: deploy-static
    plan:
    - get: govuk-infrastructure
      passed:
      - run-terraform
      trigger: true
    - get: release
      resource: static
      trigger: true
    - task: update-task-definition
      file: govuk-infrastructure/concourse/tasks/update-task-definition.yml
      params:
        APPLICATION: static
        GOVUK_ENVIRONMENT: test
    - task: update-ecs-service
      file: govuk-infrastructure/concourse/tasks/update-ecs-service.yml
      params:
        ECS_SERVICE: static
        GOVUK_ENVIRONMENT: test
    serial: true
    on_failure:
      <<: *notify-slack-failure

  - name: deploy-draft-static
    plan:
    - get: govuk-infrastructure
      passed:
      - run-terraform
      trigger: true
    - get: release
      resource: static
      trigger: true
    - task: update-task-definition
      file: govuk-infrastructure/concourse/tasks/update-task-definition.yml
      params:
        APPLICATION: draft-static
        GOVUK_ENVIRONMENT: test
    - task: update-ecs-service
      file: govuk-infrastructure/concourse/tasks/update-ecs-service.yml
      params:
        ECS_SERVICE: draft-static
        GOVUK_ENVIRONMENT: test
    serial: true
    on_failure:
      <<: *notify-slack-failure
